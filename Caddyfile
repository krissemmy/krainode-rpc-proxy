{
    email {$EMAIL}
  
    servers {
      timeouts {
        read_body   30s
        read_header 30s
        write       30s
        idle        120s
      }
      # max_header_size 16kb   # (optional)
    }
}

# HTTPS for API
{$API_HOST} {
  encode zstd gzip

  # (Optional) add CORS headers *here* if you want proxy-level CORS
  # header Access-Control-Allow-Origin  https://{$GRAFANA_HOST}
  # header Access-Control-Allow-Methods "POST, OPTIONS"
  # header Access-Control-Allow-Headers "Content-Type"

  # CORS preflight (tweak origin/headers as you need)
  @preflight method OPTIONS
  header @preflight Access-Control-Allow-Origin "{http.request.header.Origin}"
  # header @preflight Access-Control-Allow-Methods "POST, OPTIONS"
  header @preflight Access-Control-Allow-Headers "Content-Type, X-API-Key"
  header @preflight Access-Control-Max-Age "86400"
  # respond @preflight 204

  # --- Health endpoints at the EDGE ---
  @ready path /readyz
  @live  path /healthz
  respond @ready 200
  respond @live  200

  # Proxy to your container network service
  reverse_proxy api:8000 {
    header_up X-Real-IP {remote_host}
  }


  header {
    Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    X-Content-Type-Options "nosniff"
    X-Frame-Options "DENY"
    X-XSS-Protection "1; mode=block"
    Referrer-Policy "strict-origin-when-cross-origin"
    Content-Security-Policy "
      default-src 'self';
      img-src 'self' https: data:;
      script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com;
      style-src 'self' 'unsafe-inline';
      connect-src 'self' https://www.google-analytics.com https://region1.google-analytics.com https://www.googletagmanager.com;
      frame-src https://github.com https://*.github.com;
      child-src https://github.com https://*.github.com;
    "
    Permissions-Policy "camera=(), microphone=(), geolocation=()"
  }
}